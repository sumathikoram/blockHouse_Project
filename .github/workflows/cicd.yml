name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        env:
          TEST_ENV: true  # Set environment variable properly
        run: |
          ls -la  # Debugging step to check file existence
          pytest ./test_main.py --verbose

  build:
    name: Build Docker Image
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t my-fastapi-app .

  deploy:
    name: Deploy to AWS EC2
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/github-actions-key
          chmod 600 ~/.ssh/github-actions-key
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/github-actions-key

      - name: Debug SSH Key
        run: |
          ls -l ~/.ssh/github-actions-key
          cat ~/.ssh/github-actions-key | head -n 5  # Print first 5 lines for debugging

      - name: SSH to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/github-actions-key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'

            # Install Docker if not installed
            if ! command -v docker &> /dev/null
            then
              echo "Installing Docker..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker $USER
            fi

            # Install Docker Compose if not installed
            if ! command -v docker-compose &> /dev/null
            then
              echo "Installing Docker Compose..."
              sudo apt install -y docker-compose
            fi

            cd /home/ubuntu/blockHouse_Project || { echo "Directory blockHouse_Project not found!"; exit 1; }
            git pull origin main

            docker-compose down
            docker-compose up --build -d
          EOF
